{"meta":{"title":"红与黑的博客","subtitle":"","description":null,"author":"Julien","url":"https://grenadier00.github.io","root":"/"},"pages":[{"title":"","date":"2021-08-26T17:27:46.287Z","updated":"2021-08-25T10:53:50.750Z","comments":true,"path":"contents/hexo-contents/hexo-general-contents.html","permalink":"https://grenadier00.github.io/contents/hexo-contents/hexo-general-contents.html","excerpt":"","text":""},{"title":"相关链接","date":"2021-08-26T05:24:15.583Z","updated":"2021-08-26T05:24:15.583Z","comments":true,"path":"link.html","permalink":"https://grenadier00.github.io/link.html","excerpt":"","text":"github: http://github.com Hexo: http://hexo.io hueman: https://github.com/ppoffice/hexo-theme-hueman"},{"title":"关于","date":"2021-08-27T18:52:52.036Z","updated":"2021-08-26T18:08:29.643Z","comments":true,"path":"about.html","permalink":"https://grenadier00.github.io/about.html","excerpt":"","text":"这是一个个人博客网站，转载本网站文章时请注明出处。"},{"title":"categories","date":"2021-08-24T06:47:54.000Z","updated":"2021-08-26T18:07:26.216Z","comments":true,"path":"Categories/index.html","permalink":"https://grenadier00.github.io/Categories/index.html","excerpt":"","text":""},{"title":"目录","date":"2021-08-26T17:27:46.286Z","updated":"2021-08-26T05:20:28.859Z","comments":true,"path":"contents/general-content.html","permalink":"https://grenadier00.github.io/contents/general-content.html","excerpt":"","text":"github 如何通过修改hosts文件来加速github的访问(Windows) hexo"},{"title":"tags","date":"2021-08-24T06:49:04.000Z","updated":"2021-08-24T06:49:31.196Z","comments":true,"path":"tags/index.html","permalink":"https://grenadier00.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"服务器","slug":"Hexo/服务器","date":"2021-08-30T11:55:40.000Z","updated":"2021-08-30T12:05:23.360Z","comments":true,"path":"2021/08/30/Hexo/服务器/","link":"","permalink":"https://grenadier00.github.io/2021/08/30/Hexo/%E6%9C%8D%E5%8A%A1%E5%99%A8/","excerpt":"","text":"hexo-serverHexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用。 1$ npm install hexo-server --save 安装完成后，输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。 1$ hexo server 或者简写为 1$ hexo s 如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下： 1$ hexo server -p 5000 那么你的网站便会在 http://localhost:5000 下启动。 静态模式在静态模式下，服务器只处理 public 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 hexo generate，此模式通常用于生产环境（production mode）下。 1$ hexo server -s 自定义IP服务器默认运行在 0.0.0.0，您可以覆盖默认的 IP 设置，如下： 1$ hexo server -i 192.168.1.1 指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的127.0.0.1外，通常还有一个192.168.*.*的局域网IP，如果像上面那样使用-i参数，就不能用127.0.0.1来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为-i参数的值，那么就无法通过公网来访问站点。 原文链接：https://hexo.io/zh-cn/docs/server","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"使用介绍","slug":"Hexo/使用介绍","permalink":"https://grenadier00.github.io/categories/Hexo/%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"}]},{"title":"写作","slug":"Hexo/写作","date":"2021-08-30T11:38:16.000Z","updated":"2021-08-30T11:54:16.069Z","comments":true,"path":"2021/08/30/Hexo/写作/","link":"","permalink":"https://grenadier00.github.io/2021/08/30/Hexo/%E5%86%99%E4%BD%9C/","excerpt":"","text":"你可以执行下列命令来创建一篇新文章或者新的页面。 1$ hexo new [layout] &lt;title&gt; 您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。 布局（Layout）Hexo 有三种默认布局：post、page 和 draft。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。 布局 路径 post source/_posts page source draft source/_drafts Front-matterFront-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量。举例来说，本文的 Front-matter为： 12345678910layout: - posttitle: 写作date: 2021-08-30 19:38:16tags:- hexocategories:- Hexo- 使用介绍thumbnail: /2021/08/30/Hexo/写作/HEXO.png 以下是主要使用的预先定义的参数，您可在模板中使用这些参数值并加以利用。 参数 描述 默认值 layout 布局 config.default_layout title 标题 文章的文件名 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） 分类和标签只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。 123456tags:- hexo- 使用说明categories:- Hexo- 使用介绍 在这里·tag 下的 hexo 和 使用说明 标签关系为并列，而 categories 下的 使用说明 则是 Hexo 的二级分类。 原文链接：https://hexo.io/zh-cn/docs/writinghttps://hexo.io/zh-cn/docs/front-matter","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"使用介绍","slug":"Hexo/使用介绍","permalink":"https://grenadier00.github.io/categories/Hexo/%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"}]},{"title":"命令","slug":"Hexo/命令","date":"2021-08-30T10:45:42.000Z","updated":"2021-08-30T11:55:08.478Z","comments":true,"path":"2021/08/30/Hexo/命令/","link":"","permalink":"https://grenadier00.github.io/2021/08/30/Hexo/%E5%91%BD%E4%BB%A4/","excerpt":"","text":"本文将介绍几个主要的 Hexo 命令。在执行这些命令前，请将 cmd 或 bash 路径转到你想要操作的文件夹下。 初始化1$ hexo init 新建一个网站。本命令相当于执行了以下几步： Git clone hexo-starter 和 hexo-theme-landscape 主题到当前目录或指定目录。 使用 Yarn 1、pnpm 或 npm 包管理器下载依赖（如有已安装多个，则列在前面的优先）。npm 默认随 Node.js 安装。 新建文章1$ hexo new [layout] &lt;title&gt; 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。 1$ hexo new &quot;post title with whitespace&quot; 参数 描述 -p, –path 自定义新文章的路径 -r, –replace 如果存在同名文章，将其替换 -s, –slug 文章的 Slug，作为新文章的文件名和发布后的 URL 默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 index.md 文件。你可以使用 –path 参数来覆盖上述行为、自行决定文件的目录： 1hexo new page --path about/me &quot;About me&quot; 以上命令会创建一个 source/about/me.md 文件，同时 Front Matter 中的 title 为 “About me” 生成静态文件1$ hexo generate 该命令可以简写为 1$ hexo g 此操作会在 public 文件夹下生成网站的静态文件 部署网站1$ hexo deploy 该命令可以简写为： 1$ hexo d 注：如果输入 hexo g &amp; hexo d ，就可以在生成文件后立即部署。 清除缓存1$ hexo clean version1$ hexo version 显示 Hexo 版本。 原文链接：https://hexo.io/zh-cn/docs/configuration","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"使用介绍","slug":"Hexo/使用介绍","permalink":"https://grenadier00.github.io/categories/Hexo/%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"}]},{"title":"Hexo表格语法失效","slug":"Hexo/Hexo表格语法失效","date":"2021-08-29T12:48:35.000Z","updated":"2021-08-29T13:03:55.213Z","comments":true,"path":"2021/08/29/Hexo/Hexo表格语法失效/","link":"","permalink":"https://grenadier00.github.io/2021/08/29/Hexo/Hexo%E8%A1%A8%E6%A0%BC%E8%AF%AD%E6%B3%95%E5%A4%B1%E6%95%88/","excerpt":"","text":"错误介绍在使用 Markdown 语言编写 Hexo 博客的表格时，发现了这样一个问题。虽然使用语法正确，在 VS code 里表格预览正常，但是在网页上预览博客时却发现输入的内容并没有以表格的形式呈现出来。 解决方法表格段落和正文段落之间隔一行。 灵感来源：https://www.jianshu.com/p/e19eff4311f4","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"解决问题","slug":"Hexo/解决问题","permalink":"https://grenadier00.github.io/categories/Hexo/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"},{"name":"markdown","slug":"markdown","permalink":"https://grenadier00.github.io/tags/markdown/"},{"name":"表格","slug":"表格","permalink":"https://grenadier00.github.io/tags/%E8%A1%A8%E6%A0%BC/"}]},{"title":"配置","slug":"Hexo/配置","date":"2021-08-29T12:05:09.000Z","updated":"2021-08-30T11:54:48.581Z","comments":true,"path":"2021/08/29/Hexo/配置/","link":"","permalink":"https://grenadier00.github.io/2021/08/29/Hexo/%E9%85%8D%E7%BD%AE/","excerpt":"","text":"您可以在 _config.yml 中修改大部分的配置，这里主要介绍配置文件必须要手动修改的部分。 table th:first-of-type { width: 15%; } table th:nth-of-type(2) { width: 85%; } 网站配置 参数 描述 title 网站标题 description&ensp; 网站描述 keywords 网站的关键词。支持多个关键词 author 您的名字 language 网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN。 timezone 网站时区。Hexo 默认使用您电脑的时区。请参考 时区列表 进行设置，如 America/New_York, Japan, 和 UTC 。一般的，对于中国大陆地区可以使用 Asia/Shanghai。 主题 参数 描述 theme 当前主题名称。值为false时禁用主题 你需要在 theme 参数后注明你所使用的主题，主题文件放在 /theme 文件夹下，如 1theme: hueman 部署 参数 描述 deploy 部署部分的设置 如果要将博客部署到 github 上，你首先需要创建一个 github 仓库，仓库命名为 youname.github.io ( yourname 为你的 github 用户名),参数配置如下所示 1234deploy: type: git repo: git@github.com:yourname/yourname.github.io branch: master 注：branch 后参数也有可能是 main ，此参数视要部署的 github 仓库的实际分支为定 原文链接：https://hexo.io/zh-cn/docs/configuration","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"使用介绍","slug":"Hexo/使用介绍","permalink":"https://grenadier00.github.io/categories/Hexo/%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"}]},{"title":"建站","slug":"Hexo/建站","date":"2021-08-29T11:44:56.000Z","updated":"2021-08-30T11:44:00.424Z","comments":true,"path":"2021/08/29/Hexo/建站/","link":"","permalink":"https://grenadier00.github.io/2021/08/29/Hexo/%E5%BB%BA%E7%AB%99/","excerpt":"","text":"初始化 Hexo安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install (&lt;&gt;内填写 Hexo 文件夹路径)此外，也可以在任意位置首先建立一个 Hexo 文件夹，将 cmd 或 powershell 运行目录转到刚刚创建的 Hexo 文件夹内，输入以下命令（推荐） 1$hexo init 新建完成后，指定文件夹的目录如下 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 目录介绍_config.yml此文件内容为网站的配置信息，可以在此配置大部分的参数。 package.json应用程序的信息。 scaffolds模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。 source资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。 themes主题文件夹。Hexo 会根据主题来生成静态页面。 原文链接：https://hexo.io/zh-cn/docs/setup","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"使用介绍","slug":"Hexo/使用介绍","permalink":"https://grenadier00.github.io/categories/Hexo/%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"}]},{"title":"安装Hexo","slug":"Hexo/安装Hexo","date":"2021-08-29T11:05:11.000Z","updated":"2021-08-29T11:37:02.054Z","comments":true,"path":"2021/08/29/Hexo/安装Hexo/","link":"","permalink":"https://grenadier00.github.io/2021/08/29/Hexo/%E5%AE%89%E8%A3%85Hexo/","excerpt":"","text":"安装前提安装 Hexo 相当简单，只需要先安装下列应用程序即可： Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本) Git安装Git下载并安装 git. 安装Node.js前往淘宝Node.js镜像下载安装Node.js. 安装Hexo所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。 1$ npm install -g hexo-cli 进阶安装和使用对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。 1$ npm install hexo 安装以后，可以使用以下两种方式执行 Hexo： npx hexo &lt;command&gt; 将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo ：(推荐) 1echo &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile 原文链接：https://hexo.io/zh-cn/docs/#%E8%BF%9B%E9%98%B6%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"使用介绍","slug":"Hexo/使用介绍","permalink":"https://grenadier00.github.io/categories/Hexo/%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"}]},{"title":"新增SSH到Github账户","slug":"Github/新增SSH到Github账户","date":"2021-08-28T14:48:00.000Z","updated":"2021-08-28T16:02:03.828Z","comments":true,"path":"2021/08/28/Github/新增SSH到Github账户/","link":"","permalink":"https://grenadier00.github.io/2021/08/28/Github/%E6%96%B0%E5%A2%9ESSH%E5%88%B0Github%E8%B4%A6%E6%88%B7/","excerpt":"","text":"要配置 GitHub 帐户使用新的（或现有）SSH 密钥，您还需要将其添加到 GitHub 帐户。 在新增 SSH 密钥到 GitHub 帐户之前，您应该已： 检查现有 SSH 密钥 生成新 SSH 密钥并添加到 ssh-agent 将 SSH 公钥复制到剪贴板。如果您的 SSH 公钥文件与示例代码不同，请修改文件名以匹配您当前的设置。 在复制密钥时，请勿添加任何新行或空格。 12$ clip &lt; ~/.ssh/id_ed25519.pub# Copies the contents of the id_ed25519.pub file to your clipboard 提示：如果 clip 不可用，可找到隐藏的 .ssh 文件夹，在常用的文本编辑器中打开该文件，并将其复制到剪贴板。 在任何页面的右上角，单击您的个人资料照片，然后单击 Settings（设置）. 在用户设置侧边栏中，单击 SSH and GPG keys（SSH 和 GPG 密钥）. 单击 New SSH key（新 SSH 密钥）或 Add SSH key（添加 SSH 密钥）。 在 “Title”（标题）字段中，为新密钥添加描述性标签。 将密钥粘贴到 “Key”（密钥）字段。 单击 Add SSH key（添加 SSH 密钥）。 如有提示，请确认您的 GitHub 密码。 原文链接：https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account","categories":[{"name":"Github","slug":"Github","permalink":"https://grenadier00.github.io/categories/Github/"},{"name":"ssh","slug":"Github/ssh","permalink":"https://grenadier00.github.io/categories/Github/ssh/"}],"tags":[{"name":"github","slug":"github","permalink":"https://grenadier00.github.io/tags/github/"},{"name":"ssh","slug":"ssh","permalink":"https://grenadier00.github.io/tags/ssh/"}]},{"title":"生成新SSH密钥并添加到ssh-agent","slug":"Github/生成新SSH密钥并添加到ssh-agent","date":"2021-08-28T13:45:25.000Z","updated":"2021-08-28T15:58:21.764Z","comments":true,"path":"2021/08/28/Github/生成新SSH密钥并添加到ssh-agent/","link":"","permalink":"https://grenadier00.github.io/2021/08/28/Github/%E7%94%9F%E6%88%90%E6%96%B0SSH%E5%AF%86%E9%92%A5%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0ssh-agent/","excerpt":"","text":"检查现有 SSH 密钥后，您可以生成新 SSH 密钥以用于身份验证，然后将其添加到 ssh-agent。 关于 SSH 密钥生成如果您还没有 SSH 密钥，则必须生成新 SSH 密钥用于身份验证。 如果不确定是否已经拥有 SSH 密钥，您可以检查现有密钥。 更多信息请参阅“检查现有 SSH 密钥”。如果要使用硬件安全密钥向 GitHub 验证，则必须为硬件安全密钥生成新的 SSH 密钥。 使用密钥对进行身份验证时，您必须将硬件安全密钥连接到计算机。 更多信息请参阅 OpenSSH 8.2 发行说明。如果不想在每次使用 SSH 密钥时重新输入密码，您可以将密钥添加到 SSH 代理，让它管理您的 SSH 密钥并记住您的密码。 生成新 SSH 密钥 打开 Git Bash。 粘贴下面的文本（替换为您的 GitHub 电子邮件地址）。 1$ ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot; 注：如果您使用的是不支持 Ed25519 算法的旧系统，请使用以下命令： 1$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot; 这将创建以所提供的电子邮件地址为标签的新 SSH 密钥。 1&gt; Generating public/private ed25519 key pair. 提示您“Enter a file in which to save the key（输入要保存密钥的文件）”时，按 Enter 键。 这将接受默认文件位置。 1&gt; Enter a file in which to save the key (/c/Users/you/.ssh/id_ed25519):[Press enter] 在提示时输入安全密码。 12&gt; Enter passphrase (empty for no passphrase): [Type a passphrase]&gt; Enter same passphrase again: [Type passphrase again] 将 SSH 密钥添加到 ssh-agent在向 ssh 代理添加新的 SSH 密钥以管理您的密钥之前，您应该检查现有 SSH 密钥并生成新的 SSH 密钥. 确保 ssh-agent 正在运行。 您可以根据“使用 SSH 密钥密码”中的“自动启动 ssh-agent”说明，或者手动启动它：123# start the ssh-agent in the background$ eval &quot;$(ssh-agent -s)&quot;&gt; Agent pid 59566 将 SSH 私钥添加到 ssh-agent。 如果您创建了不同名称的密钥，或者您要添加不同名称的现有密钥，请将命令中的 id_ed25519 替换为您的私钥文件的名称。1$ ssh-add ~/.ssh/id_ed25519 将 SSH 密钥添加到 GitHub 上的帐户。 更多信息请参阅“将新的 SSH 密钥添加到 GitHub 帐户”。 为硬件安全密钥生成新的 SSH 密钥 将硬件安全密钥插入计算机。 打开 Git Bash。 粘贴下面的文本，将电子邮件地址替换为您的 GitHub 帐户的电子邮件地址。 1$ ssh-keygen -t ed25519-sk -C &quot;your_email@example.com&quot; 注：如果命令失败，并且您收到错误 invalid format 或 feature not supported，则表明您可能在使用不支持 Ed25519 算法的硬件安全密钥。 请输入以下命令。 1$ ssh-keygen -t ecdsa-sk -C &quot;your_email@example.com&quot; 出现提示时，请触摸硬件安全密钥上的按钮。 当提示您“Enter a file in which to save the key（输入要保存密钥的文件）”时，按 Enter 接受默认文件位置。 1&gt; Enter a file in which to save the key (/c/Users/you/.ssh/id_ed25519_sk):[Press enter] 当提示您输入密码时，按 Enter。 123&gt; Enter passphrase (empty for no passphrase): [Type a passphrase]&gt; Enter same passphrase again: [Type passphrase again]将 SSH 密钥添加到 GitHub 上的帐户。 更多信息请参阅“将新的 SSH 密钥添加到 GitHub 帐户”。 原文地址：https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key","categories":[{"name":"Github","slug":"Github","permalink":"https://grenadier00.github.io/categories/Github/"},{"name":"ssh","slug":"Github/ssh","permalink":"https://grenadier00.github.io/categories/Github/ssh/"}],"tags":[{"name":"github","slug":"github","permalink":"https://grenadier00.github.io/tags/github/"},{"name":"ssh","slug":"ssh","permalink":"https://grenadier00.github.io/tags/ssh/"}]},{"title":"检查现有ssh密钥","slug":"Github/检查现有ssh密钥","date":"2021-08-28T13:33:02.000Z","updated":"2021-08-28T15:56:17.049Z","comments":true,"path":"2021/08/28/Github/检查现有ssh密钥/","link":"","permalink":"https://grenadier00.github.io/2021/08/28/Github/%E6%A3%80%E6%9F%A5%E7%8E%B0%E6%9C%89ssh%E5%AF%86%E9%92%A5/","excerpt":"","text":"检查现有 SSH 密钥后，您可以生成新 SSH 密钥以用于身份验证，然后将其添加到 ssh-agent。 打开 Git Bash。 输入 ls -al ~/.ssh 以查看是否存在现有 SSH 密钥： 12$ ls -al ~/.ssh# Lists the files in your .ssh directory, if they exist 检查目录列表以查看是否已经有 SSH 公钥。 默认情况下，公钥的文件名是以下之一： id_rsa.pub id_ecdsa.pub id_ed25519.pub 如果您没有现有的公钥和私钥对，或者不想使用任何可用于连接到 GitHub 的密钥对，则生成新的 SSH 密钥。如果您看到列出的现有公钥和私钥对（例如 id_rsa.pub 和 id_rsa），并且您希望使用它们连接到 GitHub，则可以[将 SSH 密钥添加到 ssh-agent]。 原文地址：https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh/checking-for-existing-ssh-keys","categories":[{"name":"Github","slug":"Github","permalink":"https://grenadier00.github.io/categories/Github/"},{"name":"ssh","slug":"Github/ssh","permalink":"https://grenadier00.github.io/categories/Github/ssh/"}],"tags":[{"name":"github","slug":"github","permalink":"https://grenadier00.github.io/tags/github/"},{"name":"ssh","slug":"ssh","permalink":"https://grenadier00.github.io/tags/ssh/"}]},{"title":"更换hexo网页图标","slug":"Hexo/更换hexo网页图标","date":"2021-08-26T13:28:54.000Z","updated":"2021-08-29T11:05:58.993Z","comments":true,"path":"2021/08/26/Hexo/更换hexo网页图标/","link":"","permalink":"https://grenadier00.github.io/2021/08/26/Hexo/%E6%9B%B4%E6%8D%A2hexo%E7%BD%91%E9%A1%B5%E5%9B%BE%E6%A0%87/","excerpt":"","text":"本文介绍的是主题 theme 配置文件中的修改方式，也就是说仅适用于被修改的主题。 准备图标可以使用 ps 等绘图软件，也可以使用图片在线处理网站比如 bitbug，将图片转化为合适尺寸以制作图标。 图片位置打开主题theme文件夹下/source/images（实际文件夹目录可能略有不同），把刚才做好的图标放在这里，命名为 favicon.png 与编辑配置文件打开主题的 _config.yml 文件，在 favicon:下设置该文件的相对路径（实际可能略有不同，但是相对路径都是从 source 文件夹开始的）： 1favicon: images/favicon.png","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"自定义主题","slug":"Hexo/自定义主题","permalink":"https://grenadier00.github.io/categories/Hexo/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"},{"name":"favicon","slug":"favicon","permalink":"https://grenadier00.github.io/tags/favicon/"},{"name":"自定义主题","slug":"自定义主题","permalink":"https://grenadier00.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/"}]},{"title":"hexo发生error:spawn faill错误的解决方法","slug":"Hexo/hexo发生errorspawnfaill错误的解决方法","date":"2021-08-26T13:16:52.000Z","updated":"2021-08-29T12:36:21.913Z","comments":true,"path":"2021/08/26/Hexo/hexo发生errorspawnfaill错误的解决方法/","link":"","permalink":"https://grenadier00.github.io/2021/08/26/Hexo/hexo%E5%8F%91%E7%94%9Ferrorspawnfaill%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","excerpt":"","text":"问题描述出现错误error：spawn failed… 问题原因问题大多是因为git进行push或者hexo d的时候改变了一些.deploy_git文件下的内容。 解决方法删除.deploy_git文件夹;在hexo目录于cmd下输入 1git config --global core.autocrlf false 然后，依次执行： 123hexo clean hexo g hexo d 原文地址：https://blog.csdn.net/HTL2018/article/details/106876940","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"解决问题","slug":"Hexo/解决问题","permalink":"https://grenadier00.github.io/categories/Hexo/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"}]},{"title":"关于SSH","slug":"Github/关于SSH","date":"2021-08-26T12:49:25.000Z","updated":"2021-08-28T15:55:47.888Z","comments":true,"path":"2021/08/26/Github/关于SSH/","link":"","permalink":"https://grenadier00.github.io/2021/08/26/Github/%E5%85%B3%E4%BA%8ESSH/","excerpt":"","text":"使用 SSH 协议可以连接远程服务器和服务并向它们验证。 利用 SSH 密钥可以连接 GitHub，而无需在每次访问时都提供用户名和个人访问令牌。 设置 SSH 时，您需要生成新的 SSH 密钥并将其添加到 ssh 代理中。使用密钥进行身份验证之前，您必须将 SSH 密钥添加到 GitHub 上的帐户中。更多信息请参阅“生成新的 SSH 密钥并将其添加到 ssh 代理”和“新增 SSH 到 Github 账户”。 您可以使用硬件安全密钥来进一步保护 SSH 密钥，当密钥对用于通过 SSH 进行身份验证时，需要将物理硬件安全密钥附加到计算机上。 您还可以通过将密钥添加到 ssh 代理并使用密码来保护您的 SSH 密钥。 更多信息请参阅“使用 SSH 密钥密码”。 为了保持帐户安全，您可以定期检查您的 SSH 密钥列表，并撤销任何无效或已泄漏的密钥。 如果 SSH 密钥一年未使用，则作为安全预防措施，GitHub 会自动删除非活动的 SSH 密钥。 原文地址：https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh/about-ssh","categories":[{"name":"Github","slug":"Github","permalink":"https://grenadier00.github.io/categories/Github/"},{"name":"ssh","slug":"Github/ssh","permalink":"https://grenadier00.github.io/categories/Github/ssh/"}],"tags":[{"name":"github","slug":"github","permalink":"https://grenadier00.github.io/tags/github/"},{"name":"ssh","slug":"ssh","permalink":"https://grenadier00.github.io/tags/ssh/"}]},{"title":"如何通过修改hosts文件来加速github的访问(Windows)","slug":"Github/如何通过修改hosts文件来加速github的访问-Windows","date":"2021-08-26T12:39:46.000Z","updated":"2021-08-29T12:36:34.655Z","comments":true,"path":"2021/08/26/Github/如何通过修改hosts文件来加速github的访问-Windows/","link":"","permalink":"https://grenadier00.github.io/2021/08/26/Github/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E4%BF%AE%E6%94%B9hosts%E6%96%87%E4%BB%B6%E6%9D%A5%E5%8A%A0%E9%80%9Fgithub%E7%9A%84%E8%AE%BF%E9%97%AE-Windows/","excerpt":"","text":"打开DNS查询，切换到DNS选项 查询http://github.com和http://github.global.ssl.fastly.net 选择 TTL 最小的 DNS，复制 ip 地址，可以多复制几个。找到 hosts 所在的文件夹Windows 系统位于 C:\\Windows\\System32\\drivers\\etc\\ 最好把 hosts 文件备份一下，把 hosts 文件拷贝一份后改个名即可。 把复制好的IP地址添加到hosts文件中，类似于这个样子 82.113.3 http://github.com 82.113.3 http://github.global.ssl.fastly.net 打开cmd，输入 “ipconfig /flushdns”，刷新DNS缓存。","categories":[{"name":"Github","slug":"Github","permalink":"https://grenadier00.github.io/categories/Github/"},{"name":"解决问题","slug":"Github/解决问题","permalink":"https://grenadier00.github.io/categories/Github/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"github","slug":"github","permalink":"https://grenadier00.github.io/tags/github/"},{"name":"DNS","slug":"DNS","permalink":"https://grenadier00.github.io/tags/DNS/"},{"name":"host","slug":"host","permalink":"https://grenadier00.github.io/tags/host/"}]}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://grenadier00.github.io/categories/Hexo/"},{"name":"使用介绍","slug":"Hexo/使用介绍","permalink":"https://grenadier00.github.io/categories/Hexo/%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"},{"name":"解决问题","slug":"Hexo/解决问题","permalink":"https://grenadier00.github.io/categories/Hexo/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"},{"name":"Github","slug":"Github","permalink":"https://grenadier00.github.io/categories/Github/"},{"name":"ssh","slug":"Github/ssh","permalink":"https://grenadier00.github.io/categories/Github/ssh/"},{"name":"自定义主题","slug":"Hexo/自定义主题","permalink":"https://grenadier00.github.io/categories/Hexo/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/"},{"name":"解决问题","slug":"Github/解决问题","permalink":"https://grenadier00.github.io/categories/Github/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://grenadier00.github.io/tags/hexo/"},{"name":"markdown","slug":"markdown","permalink":"https://grenadier00.github.io/tags/markdown/"},{"name":"表格","slug":"表格","permalink":"https://grenadier00.github.io/tags/%E8%A1%A8%E6%A0%BC/"},{"name":"github","slug":"github","permalink":"https://grenadier00.github.io/tags/github/"},{"name":"ssh","slug":"ssh","permalink":"https://grenadier00.github.io/tags/ssh/"},{"name":"favicon","slug":"favicon","permalink":"https://grenadier00.github.io/tags/favicon/"},{"name":"自定义主题","slug":"自定义主题","permalink":"https://grenadier00.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/"},{"name":"DNS","slug":"DNS","permalink":"https://grenadier00.github.io/tags/DNS/"},{"name":"host","slug":"host","permalink":"https://grenadier00.github.io/tags/host/"}]}